{"version":3,"sources":["api/users.ts","services/getUserById.ts","components/Form/Form.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","Form","onSubmit","useState","title","setTitle","titleErrorMessage","setTitleErrorMessage","setUserId","userIdErrorMessage","setUserIdErrorMessage","action","method","event","preventDefault","completed","className","type","value","onChange","ev","target","placeholder","disabled","map","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","App","newTodos","setNewTodos","todosList","data","newTodo","Math","max","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abbb0d82.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId:number) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\n\nimport { Todo } from '../../Types/Todo';\nimport { User } from '../../Types/User';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/getUserById';\n\ntype Prop = {\n  onSubmit: (todo: Todo) => void\n};\n\nexport const Form: React.FC<Prop> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [titleErrorMessage, setTitleErrorMessage] = useState('');\n\n  const [userId, setUserId] = useState(0);\n  const [userIdErrorMessage, setUserIdErrorMessage] = useState('');\n\n  const handleTitleChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(ev.target.value);\n    setTitleErrorMessage('');\n  };\n\n  const handleUserIdChange = (ev: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+ev.target.value);\n    setUserIdErrorMessage('');\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleErrorMessage('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserIdErrorMessage('Please enter a title');\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Enter your text\"\n        />\n        {titleErrorMessage && (\n          <span className=\"error\">{titleErrorMessage}</span>)}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map((user: User) => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {userIdErrorMessage && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\n\nimport { User } from '../../Types/User';\n\ntype Prop = {\n  user:User | null\n};\n\nexport const UserInfo:React.FC<Prop> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import React from 'react';\n\nimport { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { Form } from './components/Form/Form';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './Types/Todo';\nimport { getUserById } from './services/getUserById';\nimport todosFromServer from './api/todos';\n\nconst todos:Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todosList:Todo[]) {\n  const maxId = Math.max(...todosList.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [newTodos, setNewTodos] = useState(todos);\n\n  const addTodo = ({ id, ...data }:Todo) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      ...data,\n    };\n\n    setNewTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <Form onSubmit={addTodo} />\n      <TodoList todos={newTodos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}